<script type="text/javascript">
    var map;
    var dialog;

    function initialize() {

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var mapCenter = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                drawMap(mapCenter);
            }, function () {
                handleNoGeolocation(true);
            });
        } else {
            handleNoGeolocation(false);
        }

    }

    //Edit form to be displayed with new marker
    var EditForm = '<%= escape_javascript render 'dialogform' %>';

    function drawMap(mapCenter) {

        var mapOptions = {
            center: mapCenter, // map center
            zoom: 16, //zoom level, 0 = earth view to higher value
            maxZoom: 17,
            minZoom: 15,
            scaleControl: true,
//            zoomControlOptions: { style: google.maps.ZoomControlStyle.SMALL },
            mapTypeId: google.maps.MapTypeId.ROADMAP // google map type
        };

        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

        //Drop a new Marker with our Edit Form
        create_marker(mapCenter, 'New Party', EditForm, true, true, true, null);

        google.maps.event.addListener(map, 'rightclick', function (event) {
            //Drop a new Marker with our Edit Form
            remove_marker(dialog);
        });
    }

    function loadScript() {
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = 'https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&' + 'callback=initialize';
        document.body.appendChild(script);
    }

    // handleNoGeolocation(errorFlag)
    // 브라우저에서 Geolocation을 지원하지 않을 때 오류 메세지 출력
    function handleNoGeolocation(errorFlag) {
        if (errorFlag) {
            window.alert('Error: The Geolocation service failed.');
        } else {
            window.alert('Error: Your browser doesn\'t support geolocation.');
        }
    }


    $(document).ready(loadScript);


    function create_marker(mapPos, title, description, infoOpen, draggable, Removable, iconPath) {

        //new marker
        var marker = new google.maps.Marker({
            position: mapPos,
            map: map,
            draggable: draggable,
            animation: google.maps.Animation.DROP,
            title: title,
            icon: iconPath
        });

        dialog = marker;

        //Content structure of info Window for the Markers
        var contentString = $('<div class="marker-info-win" style="width:480px">' +
                '<h3 class="marker-heading" style="margin:0 0 14px;">' + title + '</h3>' +
                '<div class="marker-inner-win"><span class="info-content">' +
                description +
                '</span></div></div>');


        //Create an infoWindow
        var infowindow = new google.maps.InfoWindow();

        //set the content of infoWindow
        infowindow.setContent(contentString[0]);

        //Find remove button in infoWindow
//        var removeBtn = contentString.find('button.remove-marker')[0];
//        var saveBtn = contentString.find('button.save-marker')[0];

        //add click listner to remove marker button
//        google.maps.event.addDomListener(removeBtn, "click", function (event) {
//            remove_marker(marker);
//        });

        if (typeof saveBtn !== 'undefined') //continue only when save button is present
        {
            //add click listner to save marker button
            google.maps.event.addDomListener(saveBtn, "click", function (event) {
                var mReplace = contentString.find('span.info-content'); //html to be replaced after success
                var mName = contentString.find('input.save-name')[0].value; //name input field value
                var mDesc = contentString.find('textarea.save-desc')[0].value; //description input field value
                var mType = contentString.find('select.save-type')[0].value; //type of marker

                if (mName == '' || mDesc == '') {
                    alert("Please enter Name and Description!");
                } else {
                    save_marker(marker, mName, mDesc, mType, mReplace); //call save marker function
                }
            });
        }

        //add click listner to save marker button
        google.maps.event.addListener(marker, 'click', function () {
            infowindow.open(map, marker); // click on marker opens info window
        });

        if (infoOpen) //whether info window should be open by default
        {
            infowindow.open(map, marker);
            map.panBy(0,-200);
        }


    }

    //############### Remove Marker Function ##############
    function remove_marker(marker) {

        /* determine whether marker is draggable
         new markers are draggable and saved markers are fixed */
        if (marker.getDraggable()) {
            marker.setMap(null); //just remove new marker
        }
        else {
            //Remove saved marker from DB and map using jQuery Ajax
            var mLatLang = marker.getPosition().toUrlValue(); //get marker position
            var myData = {del: 'true', latlang: mLatLang}; //post variables
            $.ajax({
                type: "POST",
                url: "map_process.php",
                data: myData,
                success: function (data) {
                    marker.setMap(null);
                    alert(data);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert(thrownError); //throw any errors
                }
            });
        }

    }

</script>