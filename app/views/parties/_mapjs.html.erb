<script type="text/javascript">
    var map;

    function drawMap(mapCenter, callback) {

        var mapOptions = {
            center: mapCenter, // map center
            zoom: 16, //zoom level, 0 = earth view to higher value
            maxZoom: 19,
            minZoom: 11,
            scaleControl: true,
            zoomControlOptions: { style: google.maps.ZoomControlStyle.SMALL },
            mapTypeId: google.maps.MapTypeId.ROADMAP // google map type
        };

        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

        if (!callback) {
            callback = false;
        }
        if (callback) {
            callback();
        }

    }

    function setCenter(latitude, longitude) {
        var newCenter = new google.maps.LatLng(latitude, longitude);
        if(map.getZoom() <= 14) map.setZoom(15);
        map.panTo(newCenter);
    }

    function loadScript() {
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = 'https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&' + 'callback=initialize';
        document.body.appendChild(script);
    }
    $(document).ready(loadScript);

    // handleNoGeolocation(errorFlag)
    // 브라우저에서 Geolocation을 지원하지 않을 때 오류 메세지 출력
    function handleNoGeolocation(errorFlag) {
        if (errorFlag) {
            window.alert('Error: The Geolocation service failed.');
        } else {
            window.alert('Error: Your browser doesn\'t support geolocation.');
        }
//        map = new google.maps.Map(document.getElementById('map-canvas'));
    }

    function createMarker(position, title, description, infoOpen, draggable, removable, iconPath, animate) {

        //new marker
        var marker = new google.maps.Marker({
            position: position,
            map: map,
            draggable: draggable,
            title: title,
            icon: iconPath,
            infoWindow: null,
            isInfoOpened: false
        });

        if (animate) {
            marker.animation = google.maps.Animation.DROP;
        }

        //Content structure of info Window for the Markers
        var contentString = $('<div class="marker-info-win">' +
                '<h4 class="marker-heading" style="margin:0 0 14px;">' + title + '</h4>' +
                '<div class="marker-inner-win"><span class="info-content">' +
                description +
                '</span></div></div>');

        //Create an infoWindow
        var infowindow = new google.maps.InfoWindow();

        //set the content of infoWindow
        infowindow.setContent(contentString[0]);

        // find form content for marker
        var formContent = contentString.find('input');

        //set dom ready listener of infowindow
        if(title === 'New Party') {
            contentString[0].setAttribute("style", "width:auto; min-width: 320px; padding:10px 0 3px 10px");
            google.maps.event.addListener(infowindow, 'domready', function () {
                var commit_btn = formContent[formContent.length - 1];
                commit_btn.onclick = function () {
                    setLatLng(marker);
                };
            });
        }

        //set marker's infowindow as new infowindow
        marker.infowindow = infowindow;

        //add click listner to save marker button
        google.maps.event.addListener(marker, 'click', function () {
            if (!marker.isInfoOpened) {
                marker.infowindow.open(map, marker); // click on marker opens info window
                marker.isInfoOpened = true;
            } else {
                marker.infowindow.close();
                marker.isInfoOpened = false;
            }
        });

        if (infoOpen) //whether info window should be open by default
        {
            marker.infowindow.open(map, marker);
            marker.isInfoOpened = true;
            map.setCenter(marker.getPosition());
            map.panBy(0, -150);
        }

        google.maps.event.addListener(marker, 'dragend', function () {
            map.setCenter(marker.getPosition());
            map.panBy(0, -150);
        });

        return marker;

    }


    function setLatLng(marker) {
        var party_form = document.forms['new_party'];
        if (party_form) {
            party_form.elements['party_location_latitude'].value = marker.getPosition().lat();
            party_form.elements['party_location_longitude'].value = marker.getPosition().lng();
        }
    }

    //############### Remove Marker Function ##############
    function removeMarker(marker) {

        /* determine whether marker is draggable
         new markers are draggable and saved markers are fixed */
        if (marker.getDraggable()) {
            marker.setMap(null); //just remove new marker
        }
        else {
            //Remove saved marker from DB and map using jQuery Ajax
            var mLatLang = marker.getPosition().toUrlValue(); //get marker position
            var myData = {del: 'true', latlang: mLatLang}; //post variables
            $.ajax({
                type: "POST",
                url: "map_process.php",
                data: myData,
                success: function (data) {
                    marker.setMap(null);
                    alert(data);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert(thrownError); //throw any errors
                }
            });
        }

    }

</script>